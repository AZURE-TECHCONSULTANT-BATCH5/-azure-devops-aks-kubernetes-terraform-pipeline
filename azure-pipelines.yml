
trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: TerraformValidate
    jobs:
      - job: TerraformValidateJobs
        continueOnError: false
        steps:
        - task: PublishPipelineArtifact@1
          displayName: publish Artifacts
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)/terraform-manifests'
            artifact: 'terraform-manifests-out'
            publishLocation: 'pipeline'
        - task: TerraformInstaller@1
          displayName: Terraform Install
          inputs:
           terraformVersion: 'latest' 
        - task: TerraformTaskV4@4
          displayName: terraform Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
            backendServiceArm: 'terraform-aks-azurerm-svc-connection2ops'
            backendAzureRmResourceGroupName: 'Emma-backend-capstone-rg'
            backendAzureRmStorageAccountName: 'emmabackendstorage'
            backendAzureRmContainerName: 'containerbackend'
            backendAzureRmKey: 'qa-base-tfstatefile'
            allowTelementoryCollection: false
        - task: TerraformTaskV4@4
          displayName: TerraformVaildate
          inputs:
            provider: 'azurerm'
            command: 'validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'